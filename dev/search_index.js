var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API","title":"API","text":"CurrentModule = Wasabi","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [Wasabi]","category":"page"},{"location":"api/#Wasabi.all","page":"API","title":"Wasabi.all","text":"all(db::Any, m::Type{T}) where {T <: Model}\nReturns all rows of the given model.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.begin_transaction","page":"API","title":"Wasabi.begin_transaction","text":"begin_transaction(db::Any)\nBegins a transaction.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.colnames-Union{Tuple{Type{T}}, Tuple{T}} where T<:Wasabi.Model","page":"API","title":"Wasabi.colnames","text":"colnames(m::Type{T}) where {T <: Model}\nReturns the names of the columns for the given model.\n\n\n\n\n\n","category":"method"},{"location":"api/#Wasabi.coltype-Union{Tuple{T}, Tuple{Dict{Type, String}, Type{T}, Symbol}} where T<:Wasabi.Model","page":"API","title":"Wasabi.coltype","text":"coltype(mapping::Dict{Type,String}, col::Symbol, m::Type{T})::String where {T <: Model}\nReturns the column type for the given column and model.\n\n\n\n\n\n","category":"method"},{"location":"api/#Wasabi.commit!","page":"API","title":"Wasabi.commit!","text":"commit!(db::Any)\nCommits the current transaction.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.connect","page":"API","title":"Wasabi.connect","text":"connect(config::ConnectionConfiguration)\nConnects to the database using the given configuration.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.create_schema","page":"API","title":"Wasabi.create_schema","text":"create_schema(db::Any, m::Type{T}, constraints::Vector{ModelConstraint}) where {T <: Model}\nCreates the schema for the given model and constraints.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.delete!","page":"API","title":"Wasabi.delete!","text":"delete(db::Any, model::T) where {T <: Model}\nDeletes the given model from the database.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.delete_all!","page":"API","title":"Wasabi.delete_all!","text":"delete_all(db::Any, m::Type{T}) where {T <: Model}\nDeletes all rows from the given model.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.delete_schema","page":"API","title":"Wasabi.delete_schema","text":"delete_schema(db::Any, m::Type{T}) where {T <: Model}\nDeletes the schema for the given model.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.df2model-Union{Tuple{T}, Tuple{Type{T}, DataFrames.DataFrame}} where T<:Wasabi.Model","page":"API","title":"Wasabi.df2model","text":"df2model(m::Type{T}, df::DataFrame) where {T <: Model}\nConverts the given DataFrame to the given model.\n\n\n\n\n\n","category":"method"},{"location":"api/#Wasabi.disconnect","page":"API","title":"Wasabi.disconnect","text":"disconnect(db::Any)\nDisconnects from the database.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.execute_raw_query","page":"API","title":"Wasabi.execute_raw_query","text":"execute_raw_query(db::Any, query::String, params::Vector{Any})\nExecutes the given query with the given parameters.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.first","page":"API","title":"Wasabi.first","text":"first(db::Any, m::Type{T})\nReturns the first row of the given model with the given id.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.insert!","page":"API","title":"Wasabi.insert!","text":"insert(db::Any, model::T) where {T <: Model}\nInserts the given model into the database.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.isnullable-Union{Tuple{S}, Tuple{T}, Tuple{Type{T}, Symbol, Vector{S}}} where {T<:Wasabi.Model, S<:Wasabi.ModelConstraint}","page":"API","title":"Wasabi.isnullable","text":"isnullable(m::Type{T}, field::Symbol, constraints::Vector{S}) where {T <: Model,S<:Wasabi.ModelConstraint}\nReturns true if the given column is nullable.\n\n\n\n\n\n","category":"method"},{"location":"api/#Wasabi.model2tuple-Tuple{T} where T<:Wasabi.Model","page":"API","title":"Wasabi.model2tuple","text":"model2tuple(m::T) where {T <: Model}\nConverts the given model to a tuple.\n\n\n\n\n\n","category":"method"},{"location":"api/#Wasabi.rollback","page":"API","title":"Wasabi.rollback","text":"rollback(db::Any)\nRolls back the current transaction.\n\n\n\n\n\n","category":"function"},{"location":"api/#Wasabi.tablename-Union{Tuple{Type{T}}, Tuple{T}} where T<:Wasabi.Model","page":"API","title":"Wasabi.tablename","text":"tablename(m::Type{T}) where {T <: Model}\nReturns the name of the table for the given model.\n\n\n\n\n\n","category":"method"},{"location":"api/#Wasabi.update!","page":"API","title":"Wasabi.update!","text":"update(db::Any, model::T) where {T <: Model}\nUpdates the given model in the database.\n\n\n\n\n\n","category":"function"},{"location":"migrations/","page":"Migrations","title":"Migrations","text":"CurrentModule = Wasabi","category":"page"},{"location":"migrations/#Migrations","page":"Migrations","title":"Migrations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Wasabi","category":"page"},{"location":"#Wasabi","page":"Home","title":"Wasabi","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Wasabi.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
